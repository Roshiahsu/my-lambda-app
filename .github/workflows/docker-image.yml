name: Build and Deploy with OIDC

on:
  push:
    branches:
      - yml-test
  workflow_dispatch: # 支援手動觸發，動態設置 ENABLE_ACTION
    inputs:
      ENABLE_ACTION:
        description: 'Enable the action (true/false)'
        required: true
        default: 'true'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS
    permissions:
      id-token: write
      contents: read
    if: ${{ env.ENABLE_ACTION == 'true' }} # 控制整個 job
    env:
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPO: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-3.amazonaws.com/my-lambda-image
      ENABLE_ACTION: ${{ github.event.inputs.ENABLE_ACTION || vars.ENABLE_ACTION || 'false' }} # 優先級：輸入 > 變數 > 默認
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
            path: ~/.m2
            key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
            restore-keys: ${{ runner.os }}-m2

      - name: Download JaCoCo Agent
        run: |
          wget https://repo1.maven.org/maven2/org/jacoco/org.jacoco.agent/0.8.13/org.jacoco.agent-0.8.13-runtime.jar -O jacocoagent.jar
          wget https://repo1.maven.org/maven2/org/jacoco/org.jacoco.cli/0.8.13/org.jacoco.cli-0.8.13-nodeps.jar -O jacococli.jar

      - name: Run Tests with JaCoCo Agent
        run: mvn clean test -DargLine="-javaagent:jacocoagent.jar=destfile=target/jacoco.exec,append=false"

      - name: Compile and Package Project
        run: mvn package #-X #-X 啟用Maven詳細log

      - name: Generate JaCoCo Report
        run: |
          java -jar jacococli.jar report \
            target/jacoco.exec \
            --classfiles target/classes/org/example/HelloWorld.class \
            --sourcefiles src/main/java/org/example/HelloWorld.java \
            --html target/site/jacoco

      - name: Upload JaCoCo Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
          retention-days: 1


      #### aws
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-yml-test-tamp
          aws-region: ap-northeast-3

      - name: Upload JAR to S3
        run: aws s3 cp target/aws-lambda-1.0-SNAPSHOT.jar s3://${{ vars.AWS_S3_BUCKET_JAR }}/github_pipeline_hello_world/
        if: always() #確保即使失敗也嘗試上傳
#
#      - name: Deploy to Lambda
#        run: |
#          aws lambda update-function-code \
#            --function-name github_pipeline_hello_world \
#            --s3-bucket ${{ vars.AWS_S3_BUCKET_JAR }} \
#            --s3-key aws-lambda-1.0-SNAPSHOT.jar